# Copyright 2024 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -- fully override common.names.fullname
fullnameOverride: "prefect-server"

global:
  prefect:
    image:
      repository: prefecthq/prefect
      prefectTag: 3.2.13-python3.11-kubernetes
      pullPolicy: IfNotPresent

    loggingLevel: WARNING

server:
  ## If you want to run the UI seperately from the server, you will need to set the UI-specific URLs below
  uiConfig:
    # -- set PREFECT_UI_ENABLED; enable the UI on the server
    enabled: true
    # -- sets PREFECT_UI_API_URL
    #prefectUiApiUrl: "https://processing.{{ platform_domain_name }}/api"
    # -- sets PREFECT_UI_URL
    #prefectUiUrl: "https://processing.{{ platform_domain_name }}"
    # -- sets PREFECT_UI_STATIC_DIRECTORY
    #prefectUiStaticDirectory: "/ui_build"
    prefectUiApiUrl: https://processing.{{ platform_domain_name }}/api

  env:
    - name: PREFECT_LOGGING_EXTRA_LOGGERS
      value: dask,scipy
    - name: PREFECT_LOGGING_LOGGERS_PREFECT_EXTRA_LEVEL
      value: INFO
    - name: PREFECT_LOGGING_LOGGERS_PREFECT_EXTRA_HANDLERS
      value: "[api console]"
    - name: PREFECT_LOGGING_LOGGERS_PREFECT_FLOW_RUNS_LEVEL
      value: INFO
    - name: PREFECT_LOGGING_LOGGERS_PREFECT_FLOW_RUNS_HANDLERS
      value: "[api console]"
    - name: PREFECT_LOGGING_LOGGERS_PREFECT_TASK_RUNS_HANDLERS
      value: "[api console]"
    - name: PREFECT_LOGGING_LOGGERS_PREFECT_TASK_RUNS_LEVEL
      value: INFO
    - name: PREFECT_LOGGING_ROOT_LEVEL
      value: INFO

  # requests MUST be specified if using an HPA, otherwise the HPA will not know when to trigger a scale event
  resources:
    # -- the requested resources for the server container
    requests:
      cpu: 500m
      memory: 512Mi
    # -- the requested limits for the server container
    limits:
      cpu: "1"
      memory: 2Gi

  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true

  # -- affinity for server pods assignment
  affinity:         
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: "node-role.kubernetes.io/processing"
              operator: Exists
  tolerations:
    - key: role
      operator: Equal
      value: processing
      effect: NoSchedule
## ServiceAccount configuration
serviceAccount:
  # -- specifies whether a ServiceAccount should be created
  create: true

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  #path must be /
  host:
    hostname: processing.{{ platform_domain_name }}
    path: /
    pathType: Prefix

  annotations: 
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/proxy-buffer-size: 32k
    nginx.ingress.kubernetes.io/auth-signin: https://oauth2-proxy.{{ platform_domain_name }}/oauth2/start?rd=https://$host
    nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.{{ platform_domain_name }}/oauth2/auth
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization

  tls: true
  # -- create a TLS secret for this ingress record using self-signed certificates generated by Helm
  selfSigned: false

  extraTls:
    - hosts:
        - processing.{{ platform_domain_name }}
      secretName: processing-{{ platform_domain_name | replace(".", "-") }}

# Disable bundled postgresql
postgresql:
  enabled: false

# Postgresql credentials
secret:
  create: true
  name: {{ prefect3.database.secret }}
  username: {{ prefect3.database.username }}
  password: {{ prefect3.database.password }}
  host: {{ prefect3.database.host }}
  port: 5432
  database: {{ prefect3.database.name }}
