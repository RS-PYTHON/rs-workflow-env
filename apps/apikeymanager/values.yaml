# Copyright 2024 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

affinity:  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: "node-role.kubernetes.io/processing"
            operator: Exists

config:
  # -- Allow CORS from (regexp)
  cors_origins_regex: ".*"
  # -- Allow CORS for methods
  cors_allow_methods: "GET"
  # -- Database to store API Keys
  database_url: "postgresql+psycopg2://{{ apikeymanager.database.username }}:{{ apikeymanager.database.password }}@{{ apikeymanager.database.host }}/{{ apikeymanager.database.name }}"
  # -- Default lifetime of an API Key (in hour)
  default_apikey_ttl_hour: 360 # 15 * 24
  # -- OIDC End Point
  oidc_endpoint: "https://iam.{{ platform_domain_name }}"
  # -- OIDC Realm
  oidc_realm: "rspy"
  # -- OIDC CLient ID
  oidc_client_id: "apikeymanager"
  # -- OIDC Secret used to sync user info from Keycloak
  oidc_client_secret: "{{ apikeymanager_oidc_client_secret }}"
  # -- Random string used to encode cookie-based HTTP sessions in SessionMiddleware
  cookie_secret: "{{ apikeymanager_cookieSecret }}"
  # -- Rate limiter configuration for the check apikey endpoint
  rate_limit: "20/minute"
  # -- Sync frequency of a user with data stored in Keycloak (in seconds)
  keycloak_sync_freq: 300
  # -- The URL where the OpenAPI schema will be served from
  openapi_url: "/docs/openapi.json"
  # -- If False (default): use the OpenIdConnect authentication. If True: use the authlib OAuth authentication instead.
  use_authlib_oauth: true

image:
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image repository
  repository: ghcr.io/csgroup-oss/apikey-manager
  # -- Image tag
  tag: 1.0.0

imagePullSecrets: {}

ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  className: nginx
  # -- Enabled/Disable ingress
  enabled: true
  hosts:
  - host: "apikeymanager.{{ platform_domain_name }}"
    paths:
    - path: /
      pathType: Prefix
  tls:
   - secretName: apikeymanager-{{ platform_domain_name | replace(".", "-") }}
     hosts:
       - apikeymanager.{{ platform_domain_name }}
